{"version":3,"sources":["components/Fullpage.js","components/DownIcon.js","components/Navigation.js","sections/Title.js","sections/About.js","components/TopIcon.js","sections/SkillSection.js","ThemeSwitching.js","App.js","serviceWorker.js","index.js"],"names":["Fullpage","children","this","props","react_default","a","createElement","className","concat","Component","downIcon","src","icon","alt","width","height","navigation","modules","activeClass","to","spy","smooth","offset","duration","delay","name","Title","src_components_Fullpage","components_Navigation","data","title","subtitle","react_social_icons","url","components_DownIcon","icons","down","About","sections","items","map","p","style","fontSize","contents","topIcon","PostsData","category","text","SkillSection","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","posts","setState","_this2","keys","key","SkillSection_Card","index","details","components_TopIcon","top","CardHeader","CardBody","Date","Card","SkillSection_CardHeader","SkillSection_CardBody","ThemeSwitching","css","active","toggle","bind","assertThisInitialized","aria-pressed","onClick","media","App","src_ThemeSwitching_0","lib_default","sections_Title","src_sections_About","src_sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.db182d43.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport './Fullpage.css';\r\n\r\n\r\nclass Fullpage extends Component {\r\n    render() {\r\n        const { children } = this.props\r\n        return (\r\n            <div className={`fullpage ${this.props.className || ''}`}>\r\n                {children}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default Fullpage","import React from 'react';\r\nimport './DownIcon.css';\r\n\r\nconst downIcon =(props) => {\r\n   return(     \r\n    <div className='icon'>\r\n    <img src={props.icon} alt=\"icon\" width='20px' height='25px'/>\r\n    </div>\r\n   )\r\n}\r\nexport default downIcon","import React, { Component } from 'react';\r\nimport { Link, Element } from 'react-scroll';\r\nimport './Navigation.css'\r\n\r\nclass navigation extends Component {\r\n  render() {\r\n    return (\r\n      <div className='nav'>\r\n        <Link activeClass=\"active\"\r\n          to=\"About\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={210}\r\n          duration={500}\r\n          delay={0}>\r\n          <button className='first-button'>\r\n            About\r\n        </button>\r\n        </Link>\r\n        <Element name=\"About\" className=\"About\" />\r\n        <Link activeClass=\"active\"\r\n          to=\"SkillSection\"\r\n          spy={true}\r\n          smooth={true}\r\n          offset={210}\r\n          duration={500}\r\n          delay={0}>\r\n          <button className='second-button'>\r\n            Skills\r\n        </button>\r\n        </Link>\r\n        <Element name=\"SkillSection\" className=\"SkillSection\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default navigation\r\n","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link, Element } from 'react-scroll';\r\nimport Navigation from '../components/Navigation';\r\n\r\nclass Title extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"first\">\r\n          <Navigation />\r\n          <h1>{data.title}</h1>\r\n          <div>\r\n            <h2>{data.subtitle}</h2>\r\n          </div>\r\n          <div className=\"iconWrapper\">\r\n            <SocialIcon url=\"https://github.com/mona94asgari\" />\r\n            <SocialIcon url=\"https://www.instagram.com/mrs_m0na/\" />\r\n          </div>\r\n          <Link\r\n            activeClass=\"active\"\r\n            to=\"About\"\r\n            spy={true}\r\n            smooth={true}\r\n            offset={210}\r\n            duration={500}\r\n            delay={0}>\r\n            <DownIcon icon={data.icons.down} />\r\n          </Link>\r\n          <Element name=\"About\" className=\"About\" />\r\n        </Fullpage>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default Title","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport DownIcon from '../components/DownIcon';\r\nimport { Link, Element } from 'react-scroll';\r\nimport './About.css';\r\n\r\nclass About extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"second\">\r\n          <h2>{data.sections[0].title}</h2>\r\n          <div className=\"paragraphs\">\r\n            {data.sections[0].items.map(p => {\r\n              return (\r\n                <p style={{ fontSize: '30px' }}>\r\n                  {p.contents}\r\n                </p>\r\n              );\r\n            }\r\n            )\r\n            }\r\n          </div>\r\n          <div>\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"SkillSection\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={260}\r\n              duration={500}\r\n              delay={0}>\r\n              <DownIcon icon={data.icons.down} />\r\n            </Link>\r\n            <Element name=\"SkillSection\" className=\"SkillSection\" />\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default About\r\n","import React from 'react';\r\nimport './TopIcon.css';\r\n\r\nconst topIcon = (props) => {\r\n   return (\r\n      <div className='top-icon'>\r\n         <img\r\n            src={props.icon}\r\n            alt=\"icon\"\r\n            width='20px'\r\n            height='25px' />\r\n      </div>\r\n   )\r\n}\r\nexport default topIcon","import React, { Component } from 'react';\r\nimport Fullpage from \"../components/Fullpage\";\r\nimport data from \"../data.json\";\r\nimport './SkillSection.css';\r\nimport TopIcon from '../components/TopIcon';\r\nimport { Link, Element } from 'react-scroll';\r\n\r\nconst PostsData = [\r\n  {\r\n    category: \"React.Js\",\r\n    text: \"ReactJS is a JavaScript library.\"\r\n  },\r\n  {\r\n    category: \"Java Script\",\r\n    text: \"JS is a programming language.\"\r\n  },\r\n  {\r\n    category: \"HTML & CSS \",\r\n    text: \"Hypertext Markup Language.\"\r\n  }\r\n]\r\nclass SkillSection extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      posts: {}\r\n    }\r\n  }\r\n  componentWillMount() {\r\n    this.setState({ posts: PostsData });\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Fullpage className=\"third\">\r\n          <h1>{data.sections[1].title}</h1>\r\n          <div className=\"app-card-list\">\r\n            {\r\n              Object.keys(this.state.posts).map(\r\n                key => <Card key={key}\r\n                  index={key}\r\n                  details={this.state.posts[key]} />\r\n              )\r\n            }\r\n            <Link\r\n              activeClass=\"active\"\r\n              to=\"About\"\r\n              spy={true}\r\n              smooth={true}\r\n              offset={260}\r\n              duration={500}\r\n              delay={0}>\r\n              <TopIcon icon={data.icons.top} />\r\n            </Link>\r\n            <Element className=\"SkillSection\" />\r\n          </div>\r\n        </Fullpage>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nclass CardHeader extends Component {\r\n  render() {\r\n    const { category } = this.props;\r\n    return (\r\n      <header>\r\n        <h3>{category}</h3>\r\n      </header>\r\n    )\r\n  }\r\n}\r\nclass CardBody extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p style={{ fontSize: '12px' }}>{Date()}</p>\r\n        <p className=\"body-content\">{this.props.text}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nclass Card extends Component {\r\n  render() {\r\n    return (\r\n      <article className=\"card\">\r\n        <CardHeader category={this.props.details.category} />\r\n        <CardBody text={this.props.details.text} />\r\n      </article>\r\n    )\r\n  }\r\n}\r\nexport default SkillSection","import React, { Component } from 'react';\r\nimport './ThemeSwitching.css';\r\n\r\nclass ThemeSwitching extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.css = `html { filter:hue-rotate(120deg) }`;\r\n    this.state = {\r\n      active: false\r\n    };\r\n    this.toggle = this.toggle.bind(this);\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      active: !this.state.active\r\n    });\r\n  }\r\n  render() {\r\n    return (\r\n      <div className='theme'>\r\n        <button\r\n          aria-pressed={this.state.active}\r\n          onClick={this.toggle}>\r\n          Color Me:\r\n        <span>\r\n            {this.state.active ? 'on' : 'off'}\r\n          </span>\r\n        </button>\r\n        <style media={this.state.active ? 'screen' : 'none'}>\r\n          {this.state.active ? this.css : this.css}\r\n        </style>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default ThemeSwitching;","import React, { Component } from 'react';\nimport './App.css';\nimport Title from './sections/Title';\nimport About from './sections/About';\nimport SkillSection from './sections/SkillSection';\nimport SnowStorm from 'react-snowstorm';\nimport ThemeSwitching from './ThemeSwitching';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <ThemeSwitching />\n        <SnowStorm />\n        <Title />\n        <About />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />\n    , document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}